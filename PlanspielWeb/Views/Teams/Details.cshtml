@model PlanspielWeb.Models.TeamDetailsViewModel

@{
    ViewData["Title"] = "Teamübersicht";
    Context.Session.TryGet<DAL.Models.User>("user", out var user);

    if (user != null && user.TeamId == Model.Team.Id)
        ViewData["current"] = "myTeam";
}

<div>
    <hr />
    <h4>Teamübersicht</h4>
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Team.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Team.Name)
        </dd>
        @if (user != null && user.Admin) {
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Team.SteamID)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Team.SteamID)
            </dd>
        }
    </dl>
</div>

<div>
    <hr />
    <h4>Spieler</h4>
    @foreach (var member in Model.Team.Members) {
        @if (user != null && user.Admin) {
            <a href="/Users/Details/@member.Id">@member.Username</a><br />
        } else {
            @member.Username<br />
        }
    }
</div>

@if (user != null && user.Admin) {
    <div>
        <hr />
        <h4>Aktionen</h4>
        <a asp-action="Edit" asp-route-id="@Model.Team.Id">Edit</a> |
        <a asp-action="Index">Back to List</a>
    </div>
}

<div>
    @{
        var XLabels = Newtonsoft.Json.JsonConvert.SerializeObject(Model.PriceItems.Select(x => x.Label).ToList());
        var YValues = Newtonsoft.Json.JsonConvert.SerializeObject(Model.PriceItems.Select(x => x.Quantity).ToList());
    }
    <div class="row">
        <canvas id="chart"></canvas>
    </div>

    <script type="text/javascript">
        $(function () {
            var chartName = "chart";
            var ctx = document.getElementById(chartName).getContext('2d');
            var data = {
                labels: @Html.Raw(XLabels),
                datasets: [{
                    label: "Machine Uptime",
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)',
                        'rgba(255, 0, 0)',
                        'rgba(0, 255, 0)',
                        'rgba(0, 0, 255)',
                        'rgba(192, 192, 192)',
                        'rgba(255, 255, 0)',
                        'rgba(255, 0, 255)'
                    ],
                    borderColor: [
                        'rgba(255,99,132,1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)',
                        'rgba(255, 0, 0)',
                        'rgba(0, 255, 0)',
                        'rgba(0, 0, 255)',
                        'rgba(192, 192, 192)',
                        'rgba(255, 255, 0)',
                        'rgba(255, 0, 255)'
                    ],
                    borderWidth: 1,
                    data: @Html.Raw(YValues)
                }]
            };

            var options = {
                maintainAspectRatio: false,
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        },
                        gridLines: {
                            display: true,
                            color: "rgba(255,99,164,0.2)"
                        }
                    }],
                    xAxes: [{
                        ticks: {
                            min: 0,
                            beginAtZero: true
                        },
                        gridLines: {
                            display: false
                        }
                    }]
                }
            };

            var myChart = new Chart(ctx, {
                options: options,
                data: data,
                type: 'line'
            });
        });
    </script>
</div>

<div>
    <hr />
    <h4>Firmenberichte des letzten Monats</h4>
    @*<table class="table">
        <thead>
            <tr>
                <th>Date time (in-game)</th>
                <th>Profit</th>
                <th>Company value</th>
                <th>Machine uptime</th>
                <th>Avg. pollution</th>

                @if (user != null && user.Admin) {
                    <th>Share Price</th>
                    <th>#Buildings</th>
                    <th>#UnlockedResearchs</th>
                    <th>#Regions</th>
                    <th>Actions</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var data in Model.Data) {
                <tr>
                    <td>@data.IngameDate</td>
                    <td>@data.Profit.ToString("C2", new System.Globalization.CultureInfo("US-us"))</td>
                    <td>@data.CompanyValue.ToString("C2", new System.Globalization.CultureInfo("US-us"))</td>
                    <td>@data.MachineUptime.ToString("P2")</td>
                    <td>@data.AveragePollution.ToString("P2")</td>

                    @if (user != null && user.Admin) {
                        <td>@data.ShareValue.ToString("C2", new System.Globalization.CultureInfo("US-us"))</td>
                        <td>@data.BuildingCount</td>
                        <td>@data.UnlockedResearchCount</td>
                        <td>@data.RegionCount</td>
                        <td>
                            <a asp-controller="SaveDatas" asp-action="DeleteFromTeam"
                               asp-route-id="@data.Id" asp-route-teamId="@Model.Id">Delete</a>
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>*@

    <div id="accordion">
        @foreach (var sd in Model.Team.Data) {
            <div class="card">
                <div class="card-header pointer" id="headingOne" data-toggle="collapse" data-target="#collapse-@sd.Id">
                    <h5>Bericht für den @sd.IngameDate</h5>
                </div>

                <div id="collapse-@sd.Id" class="collapse" data-parent="#accordion">
                    <div class="card-body row">
                        <div class="card" style="width: 15%;">
                            <div class="card-body">
                                <h5 class="card-title">Profit</h5>
                                <p class="card-text">
                                    @sd.Profit.ToString("C2", new System.Globalization.CultureInfo("US-us"))
                                </p>
                            </div>
                        </div>

                        <div class="card" style="width: 15%;">
                            <div class="card-body">
                                <h5 class="card-title">Firmenwert</h5>
                                <p class="card-text">
                                    @sd.CompanyValue.ToString("C2", new System.Globalization.CultureInfo("US-us"))
                                </p>
                            </div>
                        </div>

                        <div class="card" style="width: 15%;">
                            <div class="card-body">
                                <h5 class="card-title">Maschinenauslastung</h5>
                                <p class="card-text">
                                    @sd.MachineUptime.ToString("P2", new System.Globalization.CultureInfo("US-us"))
                                </p>
                            </div>
                        </div>

                        <div class="card" style="width: 15%;">
                            <div class="card-body">
                                <h5 class="card-title">Durchschnittliche Umweltverschmutzung</h5>
                                <p class="card-text">
                                    @sd.AveragePollution.ToString("P2", new System.Globalization.CultureInfo("US-us"))
                                </p>
                            </div>
                        </div>

                        <div class="card" style="width: 15%;">
                            <div class="card-body">
                                <h5 class="card-title">Firmenbewertung</h5>
                                <p class="card-text">
                                    @sd.ShareValue.ToString("F2", new System.Globalization.CultureInfo("US-us"))
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>